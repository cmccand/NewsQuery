{"version":3,"sources":["components/SearchBar/index.module.scss","components/Preview/index.module.scss","components/DropDown/index.jsx","components/SearchBar/index.jsx","components/Preview/index.jsx","utils/Debounce/index.js","components/MainPage/index.jsx","history.js","App.js","serviceWorker.js","index.js","components/MainPage/index.module.scss","components/DropDown/index.module.scss"],"names":["module","exports","container","innerContainer","dropDownContainer","input","imgContainer","textContainer","description","button","link","DropDown","state","isOpen","toggleDropDown","_this","setState","prevState","onSelect","value","props","renderOptions","react_default","a","createElement","Fragment","options","map","option","i","key","concat","className","styles","onClick","title","showDropDown","renderDownArrow","downArrow","selected","this","Component","defaultProps","dropDownOptions","SearchBar","onChange","_ref","target","onChangeSearch","getFilterTitle","filter","find","_this$props","currentSearch","currentFilter","onChangeFilter","type","placeholder","components_DropDown","Preview","article","src","urlToImage","alt","headline","href","url","debounce","fn","delay","timer","_arguments","arguments","clearTimeout","setTimeout","apply","searchUrl","urlPropsQueryConfig","q","UrlQueryParamTypes","string","sortBy","MainPage","articles","loading","fetchArticles","Object","asyncToGenerator","regenerator_default","mark","_callee","resp","_ref2","wrap","_context","prev","next","fetch","withCredentials","headers","Authorization","process","sent","json","t0","stop","_x","_x2","onChangeQ","onChangeSortBy","renderLoadingMessage","empty","renderArticles","length","components_Preview","components_SearchBar","storeArticles","articleContainer","addUrlProps","history","createHistory","App","listen","forceUpdate","components_MainPage","Boolean","window","location","hostname","match","configureUrlQuery","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ace5f5c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBar_container__3VUFL\",\"innerContainer\":\"SearchBar_innerContainer__2Z7iu\",\"dropDownContainer\":\"SearchBar_dropDownContainer__7MaL-\",\"input\":\"SearchBar_input__2Rs4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Preview_container__3i2QQ\",\"imgContainer\":\"Preview_imgContainer__3bdtW\",\"textContainer\":\"Preview_textContainer__1oQUD\",\"description\":\"Preview_description__3n07S\",\"button\":\"Preview_button__2r7Q6\",\"link\":\"Preview_link__28k-Y\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Styles\nimport styles from './index.module.scss';\n\nclass DropDown extends Component {\n  state = {\n    isOpen: false\n  }\n\n  toggleDropDown = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  onSelect = (value) => {\n    this.props.onSelect(value);\n    this.setState({ isOpen: false });\n  }\n\n  renderOptions = () => (\n    <>\n      {\n        this.props.options.map(\n          (option, i) => (\n            <li\n              key={`option-${i}`}\n              className={styles.option}\n              onClick={() => this.onSelect(option.value)}\n            >\n              { option.title }\n            </li>\n          )\n        )\n      }\n    </>\n  )\n\n  showDropDown = () => {\n    if (this.state.isOpen) {\n      return (\n        <ul className={styles.options}>\n          { this.renderOptions() }\n        </ul>\n      );\n    }\n  }\n\n  renderDownArrow = () => (\n    <div className={styles.downArrow} />\n  )\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.selected} onClick={this.toggleDropDown}>\n          <span>{ this.props.selected || 'Sort Articles' }</span>\n          <span>{ this.renderDownArrow() }</span>\n        </div>\n        { this.showDropDown() }\n      </div>\n    );\n  }\n}\n\nexport default DropDown;\n\nDropDown.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      value: PropTypes.string\n    })\n  ).isRequired\n};\n\nDropDown.defaultProps = {\n  selected: 'Filter'\n};\n","import React, { Component } from 'react';\n\n// Components\nimport DropDown from '../DropDown';\n\n// Styles\nimport styles from './index.module.scss';\n\nconst dropDownOptions = [\n  {\n    title: 'Popularity',\n    value: 'popularity'\n  },\n  {\n    title: 'Relevancy',\n    value: 'relevancy'\n  },\n  {\n    title: 'Date',\n    value: 'publishedAt'\n  }\n];\n\nclass SearchBar extends Component {\n  onChange = ({ target: { value }}) => {\n    this.props.onChangeSearch(value);\n  }\n\n  getFilterTitle = filter => {\n    const option = dropDownOptions.find(option => option.value === filter);\n    return option.title;\n  }\n\n  render() {\n    const { currentSearch, currentFilter, onChangeFilter } = this.props;\n    return (\n      <div className={styles.container}>\n        <div className={styles.innerContainer}>\n          <input\n           className={styles.input}\n           type=\"text\"\n           placeholder=\"Type search here\"\n           value={ currentSearch || '' }\n           onChange={this.onChange}\n          />\n          <div className={styles.dropDownContainer}>\n            <DropDown\n              selected={currentFilter ? this.getFilterTitle(currentFilter) : null }\n              onSelect={onChangeFilter}\n              options={dropDownOptions}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\n// Styles\nimport styles from './index.module.scss';\n\nconst Preview = ({ article }) => (\n  <div className={styles.container}>\n    <div className={styles.imgContainer}>\n      <img src={article.urlToImage} alt=\"\"/>\n    </div>\n    <div className={styles.textContainer}>\n      <h3 className={styles.headline}>{article.title}</h3>\n      <p className={styles.description}>\n        {article.description}\n      </p>\n      <button className={styles.button}>\n        <a target=\"_blank\" href={article.url} className={styles.link}>Read More</a>\n      </button>\n    </div>\n  </div>\n);\n\nexport default Preview;\n","export const debounce = (fn, delay) => {\n  let timer = null;\n  return function() {\n    clearTimeout(timer);\n    timer = setTimeout(() => fn.apply(this, arguments), delay);\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport SearchBar from '../SearchBar';\nimport Preview from '../Preview';\n\n// Third-party\nimport { addUrlProps, UrlQueryParamTypes } from 'react-url-query';\n\n// Utilities\nimport { debounce } from '../../utils/Debounce';\n\n// styles\nimport styles from './index.module.scss';\n\nconst searchUrl = 'https://newsapi.org/v2/everything';\nconst urlPropsQueryConfig = {\n  q: { type: UrlQueryParamTypes.string },\n  sortBy: { type: UrlQueryParamTypes.string }\n};\n\nclass MainPage extends Component {\n  state = {\n    articles: null,\n    loading: true\n  }\n\n  componentDidMount() {\n    const { q, sortBy } = this.props;\n    if (q || sortBy) {\n      this.fetchArticles(q);\n    }\n  }\n\n  fetchArticles = debounce(async (q, filter) => {\n    this.setState({ loading: true });\n    try {\n      let url = `${searchUrl}?q=${q}&language=en`;\n      if (filter) { url = `${url}&sortBy=${filter}`; }\n      const resp = await fetch(\n        url,\n        {\n          withCredentials: true,\n          headers: {\n            'Authorization': process.env.REACT_APP_NEWS_API_KEY\n          }\n        }\n      );\n      const { articles } = await resp.json();\n      this.setState({\n        articles,\n        loading: false\n      });\n      // this.storeArticles(articles);\n    } catch (err) {\n      this.setState({ loading: false });\n      throw err;\n    }\n  }, 500)\n\n  onChangeSearch = q => {\n    this.props.onChangeQ(q);\n    if (q) {\n      this.fetchArticles(q);\n    }\n  }\n\n  onChangeFilter = filter => {\n    this.props.onChangeSortBy(filter);\n    if (this.props.q) {\n      if (filter) {\n        this.fetchArticles(this.props.q, filter);\n      }\n    }\n  }\n\n  renderLoadingMessage = () => (\n    <div className={styles.empty}>\n      <p>Loading articles ...</p>\n    </div>\n  )\n\n  renderArticles = () => {\n    if (!this.state.articles) {\n      return (\n        <div className={styles.empty}>\n          <p>Type above to being your search.</p>\n        </div>\n      );\n    }\n    if (this.state.articles && this.state.articles.length) {\n      return (\n        <div className={styles.articles}>\n          {\n            this.state.articles.map(\n              (article, i) => (\n                <Preview article={article} key={`article-${i}`} />\n              )\n            )\n          }\n        </div>\n      );\n    }\n    return (\n      <div className={styles.empty}>\n        <p>No results. Please try another search.</p>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <SearchBar\n          currentSearch={this.props.q}\n          currentFilter={this.props.sortBy}\n          onChangeFilter={this.onChangeFilter}\n          storeArticles={this.storeArticles}\n          onChangeSearch={this.onChangeSearch}\n        />\n      <div className={styles.articleContainer}>\n          { this.state.loading ? this.renderLoadingMessage() : this.renderArticles() }\n        </div>\n      </div>\n    );\n  }\n}\n\nMainPage.propTypes = {\n  q: PropTypes.string,\n  sortBy: PropTypes.string,\n  onChangeQ: PropTypes.func.isRequired,\n  onChangeSortBy: PropTypes.func.isRequired\n};\n\nMainPage.defaultProps = {\n  q: null,\n  sortBy: null\n};\n\nexport default addUrlProps({ urlPropsQueryConfig })(MainPage);\n","import createHistory from 'history/createBrowserHistory';\n\nconst history = createHistory();\n\nexport default history;\n","import React, { Component } from 'react';\nimport './App.css';\nimport MainPage from './components/MainPage';\nimport history from './history';\n\nclass App extends Component {\n  componentDidMount() {\n    history.listen(() => this.forceUpdate());\n  }\n\n  render() {\n    return (\n      <div>\n        <MainPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureUrlQuery } from 'react-url-query';\nimport history from './history';\n\nconfigureUrlQuery({ history });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"articles\":\"MainPage_articles__3ig_g\",\"articleContainer\":\"MainPage_articleContainer__2ZOA2\",\"empty\":\"MainPage_empty__2nXIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DropDown_container__GGoDc\",\"selected\":\"DropDown_selected__3QGeo\",\"options\":\"DropDown_options__3T816\",\"option\":\"DropDown_option__nw19a\",\"downArrow\":\"DropDown_downArrow__2KXD9\"};"],"sourceRoot":""}